@file:OptIn(ExperimentalMaterial3Api::class)

package com.example.jetpackcomposepractice2

import android.annotation.SuppressLint
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.viewModels
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.width
import androidx.compose.material3.Button
import androidx.compose.material3.ExperimentalMaterial3Api
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.State
import androidx.compose.runtime.mutableStateOf
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewmodel.compose.viewModel

class MainActivity : ComponentActivity() {
    @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            mainScreen()
        }
    }
}

@Composable
fun mainScreen() {
    val viewModel = viewModel<MainViewModel>()
    Column(
        Modifier.fillMaxSize(),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally,
    ) {
        Text(text = viewModel.data.value, fontSize = 30.sp)
        Spacer(modifier = Modifier.height(10.dp))
        Button(onClick = {
            viewModel.changeValue()
        }, Modifier.width(100.dp)) {
            Text(text = "변경")
        }
    }
}

class MainViewModel : ViewModel() {

    // @@@@@ build.gradle (:app) 파일에 아래 내용 추가하기 @@@@@
    // implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2"

    private val _data = mutableStateOf("Hello")
    val data: State<String> = _data

    fun changeValue() {
        _data.value = if (_data.value == "Hello") "World" else "Hello"
    }

}
